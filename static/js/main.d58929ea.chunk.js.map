{"version":3,"sources":["components/navbar.js","components/about.js","components/heatmap-layer.js","components/heatmap.js","components/stats-map-layer.js","images/gold.jpg","images/silver.jpg","images/bronze.jpg","components/podium.js","components/stats.js","components/main.js","App.js","index.js"],"names":["Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Link","About","HeatmapLayer","map","useMap","useEffect","fetch","then","res","json","rawData","heatmap_data_points","rawDataPoints","sortedDataPoints","point","lat","lon","count","sort","a","b","flattenedCount","lastCount","i","length","maxCount","normalisedDataPoints","L","heatLayer","minOpacity","maxZoom","radius","blur","gradient","0.4","0.6","0.8","0.9","1","addTo","markerBounds","latLngBounds","forEach","normalisedDataPoint","extend","fitBounds","catch","console","log","Heatmap","MapContainer","className","TileLayer","attribution","url","StatsMapLayer","props","mapData","mapDataItem","Podium","useState","showDetail","setShowDetail","detailPosition","setDetailPosition","handleShowDetail","position","createModalMetadata","metadata","Object","keys","key","title","formatModalMetadataItemValue","value","Array","isArray","localeCompare","join","CardDeck","Card","Body","Text","onClick","Img","src","GoldMedal","isDataLoaded","type","data","Footer","SilverMedal","BronzeMedal","Modal","show","onHide","Header","closeButton","Title","map_data","Marker","Popup","Stats","setIsDataLoaded","statsData","setStatsData","React","most_connections","most_active_cities","most_active_countries","most_ip_addresses","most_ingress_ports","Main","exact","path","component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d58929ea.chunk.js","sourcesContent":["import BSNavbar from 'react-bootstrap/Navbar';\nimport BSNav from 'react-bootstrap/Nav'\n\nconst Navbar = () => {\n    return (    \n        <BSNavbar bg=\"light\" expand=\"lg\">\n            <BSNavbar.Brand href=\"/honey-badger/#/\">Honey Badger</BSNavbar.Brand>\n            <BSNavbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <BSNavbar.Collapse id=\"basic-navbar-nav\">\n                <BSNav>\n                    <BSNav.Link href=\"/honey-badger/#/heatmap\">Heatmap</BSNav.Link>\n                </BSNav>\n                <BSNav>\n                    <BSNav.Link href=\"/honey-badger/#/stats\">Stats</BSNav.Link>\n                </BSNav>\n            </BSNavbar.Collapse>\n        </BSNavbar>\n    );\n};\n\nexport default Navbar;\n","const About = () => {\n    return (\n        <div>This is the homepage</div>\n    );\n};\n\nexport default About;\n","import { useEffect } from 'react';\nimport { useMap } from 'react-leaflet'\nimport L from 'leaflet'\nimport 'leaflet.heat'\n\nconst HeatmapLayer = () => {\n    const map = useMap();\n\n    useEffect(() => {\n        fetch('https://omf1aavgfc.execute-api.eu-west-2.amazonaws.com/prod/v1/heatmap-data')\n            .then(res => res.json())\n            .then(rawData => rawData.heatmap_data_points)\n            .then(rawDataPoints => {\n\n                let sortedDataPoints = rawDataPoints\n                    .map(point => [point.lat, point.lon, point.count])\n                    .sort(function(a, b){ return a[2]-b[2] });\n\n                let flattenedCount = 1\n                let lastCount = sortedDataPoints[0][2]\n                for (let i = 0; i < sortedDataPoints.length; i++) {\n                    if (sortedDataPoints[i][2] > lastCount) {\n                        flattenedCount++\n                    }\n                    lastCount = sortedDataPoints[i][2]\n                    sortedDataPoints[i][2] = flattenedCount\n                }\n\n                const maxCount = sortedDataPoints[sortedDataPoints.length-1][2]\n                const normalisedDataPoints = sortedDataPoints\n                    .map(point => [point[0], point[1], point[2]/maxCount]);\n\n                const heatmapConfig = {\n                    minOpacity: 0.4,\n                    maxZoom: 3,\n                    radius: 20,\n                    blur: 15,\n                    gradient: {\n                        0.4: 'blue',\n                        0.6: 'lime',\n                        0.8: 'yellow',\n                        0.9: 'orange',\n                        1.0: 'red',\n                    },\n                };\n                \n                L.heatLayer(normalisedDataPoints, heatmapConfig).addTo(map);\n\n                let markerBounds = L.latLngBounds([]);\n                normalisedDataPoints.forEach(normalisedDataPoint => {\n                    markerBounds.extend([normalisedDataPoint[0], normalisedDataPoint[1]]);\n                });\n\n                map.fitBounds(markerBounds);\n            })\n            .catch(console.log);\n\n    }, [map]);\n\n    return null\n}\n\nexport default HeatmapLayer\n","import { MapContainer, TileLayer } from 'react-leaflet'\nimport HeatmapLayer from './heatmap-layer'\n\nimport './heatmap.css';\n\nconst Heatmap = () => {\n    return (\n        <MapContainer className=\"heatmap\">\n            <HeatmapLayer />\n            <TileLayer\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n        </MapContainer>\n    );\n};\n\nexport default Heatmap;\n","import { useEffect } from 'react';\nimport { latLngBounds } from 'leaflet'\nimport { useMap } from 'react-leaflet'\n\nconst StatsMapLayer = props => {\n    const map = useMap();\n\n    useEffect(() => {\n        if (!props.mapData || props.mapData.length === 0) {\n            return;\n        }\n\n        let markerBounds = latLngBounds([]);\n        props.mapData.forEach(mapDataItem => {\n            markerBounds.extend([mapDataItem.lat, mapDataItem.lon]);\n        });\n\n        map.fitBounds(markerBounds, {\n            maxZoom: 10,\n        });\n    });\n\n    return null;\n};\n\nexport default StatsMapLayer;\n","export default __webpack_public_path__ + \"static/media/gold.7b323ec2.jpg\";","export default __webpack_public_path__ + \"static/media/silver.9a7c5b0e.jpg\";","export default __webpack_public_path__ + \"static/media/bronze.d1bf6559.jpg\";","import { useState } from 'react'\nimport Card from 'react-bootstrap/Card'\nimport CardDeck from 'react-bootstrap/CardDeck';\nimport Modal from 'react-bootstrap/Modal'\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'\nimport StatsMapLayer from './stats-map-layer';\n\nimport GoldMedal from '../images/gold.jpg'\nimport SilverMedal from '../images/silver.jpg' \nimport BronzeMedal from '../images/bronze.jpg'\n\nimport './podium.css'\nimport './loading.css'\n\nconst Podium = props => {\n\n    const [showDetail, setShowDetail] = useState(false);\n    const [detailPosition, setDetailPosition] = useState(0);\n\n    const handleCloseDetail = () => setShowDetail(false);\n    const handleShowDetail = position => {\n        setDetailPosition(position);\n        setShowDetail(true);\n    };\n\n    const createModalMetadata = metadata => {\n        if (!metadata) {\n            return null;\n        }\n\n        return Object.keys(metadata).map(key => (\n            <p className=\"modal-metadata-item\" key={key}>\n                {metadata[key].title}: {formatModalMetadataItemValue(metadata[key].value)}\n            </p>\n        ));\n    };\n\n    const formatModalMetadataItemValue = value => {\n        if (Array.isArray(value)) {\n            return value\n                .sort((a, b) => a.localeCompare(b))\n                .join(', ');\n        }\n        return value;\n    };\n\n    const createModalMap = mapData => {\n        if (!mapData || mapData.length === 0) {\n            return null;\n        }\n\n        return (\n            <MapContainer className=\"statsmap\" maxZoom=\"18\">\n                <StatsMapLayer mapData={mapData} />\n                <TileLayer\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                />\n                {mapData.map((mapDataItem, key) => (\n                    <Marker position={[mapDataItem.lat, mapDataItem.lon]} key={key}>\n                        {mapDataItem.metadata &&\n                            <Popup>\n                                {createModalMetadata(mapDataItem.metadata)}\n                            </Popup>\n                        }\n                    </Marker>\n                ))}\n            </MapContainer>\n        );\n    }\n\n    return (\n        <div className=\"podium\">\n            <CardDeck>\n                <Card className=\"podium-title-card\">\n                    <Card.Body className=\"podium-title-text\">\n                        <Card.Text>{props.title}</Card.Text>\n                    </Card.Body>\n                </Card>\n                <Card className=\"podium-data-card\" onClick={() => handleShowDetail(0)}>\n                    <Card.Body>\n                        <Card.Img className=\"podium-medal-image\" src={GoldMedal} />\n                        <Card.Text className={`${props.isDataLoaded ? \"\" : \"loading\"} ${\"podium-text-\" + props.type}`}>{props.data[0].value}</Card.Text>\n                    </Card.Body>\n                    <Card.Footer className=\"podium-gold-footer\" />\n                </Card>\n                <Card className=\"podium-data-card\" onClick={() => handleShowDetail(1)}>\n                    <Card.Body>\n                        <Card.Img className=\"podium-medal-image\" src={SilverMedal} />\n                        <Card.Text className={`${props.isDataLoaded ? \"\" : \"loading\"} ${\"podium-text-\" + props.type}`}>{props.data[1].value}</Card.Text>\n                    </Card.Body>\n                    <Card.Footer className=\"podium-silver-footer\" />\n                </Card>\n                <Card className=\"podium-data-card\" onClick={() => handleShowDetail(2)}>\n                    <Card.Body>\n                        <Card.Img className=\"podium-medal-image\" src={BronzeMedal} />\n                        <Card.Text className={`${props.isDataLoaded ? \"\" : \"loading\"} ${\"podium-text-\" + props.type}`}>{props.data[2].value}</Card.Text>\n                    </Card.Body>\n                    <Card.Footer className=\"podium-bronze-footer\" />\n                </Card>\n            </CardDeck>\n            <Modal show={showDetail} onHide={handleCloseDetail}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{props.title}: {props.data[detailPosition].value}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    {createModalMetadata(props.data[detailPosition].metadata)}\n                    {createModalMap(props.data[detailPosition].map_data)}\n                </Modal.Body>\n            </Modal>\n        </div>\n    );\n};\n\nexport default Podium;\n","import React, { useState } from 'react';\n\nimport Podium from './podium'\n\nimport './stats.css'\n\nconst Stats = () => {\n    const [isDataLoaded, setIsDataLoaded] = useState(false)\n    const [statsData, setStatsData] = useState({\n        \"most_connections\": [{},{},{}],\n        \"most_active_cities\": [{},{},{}],\n        \"most_active_countries\": [{},{},{}],\n        \"most_ip_addresses\": [{},{},{}],\n        \"most_ingress_ports\": [{},{},{}],\n    });\n\n    React.useEffect(() => {\n        fetch('https://omf1aavgfc.execute-api.eu-west-2.amazonaws.com/prod/v1/stats-data')\n            .then(res => res.json())\n            .then(data => {\n                setStatsData(data);\n                setIsDataLoaded(true);\n            })\n            .catch(console.log);\n    }, []);\n\n    return (\n        <div className=\"stats-page\">\n            <Podium title=\"Most connection attempts\" data={statsData.most_connections} type=\"number\" isDataLoaded={isDataLoaded} />\n            <Podium title=\"Most active city\" data={statsData.most_active_cities} type=\"string\" isDataLoaded={isDataLoaded} />\n            <Podium title=\"Most active country\" data={statsData.most_active_countries} type=\"string\" isDataLoaded={isDataLoaded} />\n            <Podium title=\"Most IP addresses used\" data={statsData.most_ip_addresses} type=\"number\" isDataLoaded={isDataLoaded} />\n            <Podium title=\"Most ingress ports tried\" data={statsData.most_ingress_ports} type=\"number\" isDataLoaded={isDataLoaded} />\n        </div>\n    );\n};\n\nexport default Stats\n","import { Switch, Route } from 'react-router-dom';\n\nimport About from './about'\nimport Heatmap from './heatmap'\nimport Stats from './stats'\n\nconst Main = () => {\n    return (\n        <Switch>\n            <Route exact path='/' component={About}></Route>\n            <Route exact path='/heatmap' component={Heatmap}></Route>\n            <Route exact path='/stats' component={Stats}></Route>\n        </Switch>\n    );\n};\n\nexport default Main;\n","import Navbar from './components/navbar'\nimport Main from './components/main'\n\nimport './App.css';\n\nconst App = () => {\n    return (\n        <div className=\"App\">\n            <Navbar />\n            <Main />\n        </div>\n    );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render((\n    <HashRouter>\n        <App />\n    </HashRouter>),\n    document.getElementById('root')\n);\n"],"sourceRoot":""}