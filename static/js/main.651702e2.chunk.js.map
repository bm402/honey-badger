{"version":3,"sources":["components/navbar.js","components/about.js","components/heatmap-layer.js","components/heatmap.js","images/gold.jpg","images/silver.jpg","images/bronze.jpg","components/podium.js","components/stats.js","components/main.js","App.js","index.js"],"names":["Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Link","About","HeatmapLayer","map","useMap","React","useEffect","fetch","then","res","json","rawData","heatmap_data_points","rawDataPoints","sortedDataPoints","point","lat","lon","count","sort","a","b","flattenedCount","lastCount","i","length","maxCount","normalisedDataPoints","L","heatLayer","minOpacity","maxZoom","radius","blur","gradient","0.4","0.6","0.8","0.9","1","addTo","catch","console","log","Heatmap","MapContainer","className","center","zoom","TileLayer","attribution","url","Podium","props","CardDeck","Card","Body","Text","title","Img","src","GoldMedal","isDataLoaded","type","data","value","Footer","SilverMedal","BronzeMedal","Stats","useState","setIsDataLoaded","statsData","setStatsData","most_connections","most_active_cities","most_active_countries","most_ip_addresses","most_ingress_ports","Main","exact","path","component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.651702e2.chunk.js","sourcesContent":["import BSNavbar from 'react-bootstrap/Navbar';\nimport BSNav from 'react-bootstrap/Nav'\n\nconst Navbar = () => {\n    return (    \n        <BSNavbar bg=\"light\" expand=\"lg\">\n            <BSNavbar.Brand href=\"/\">Honey Badger</BSNavbar.Brand>\n            <BSNavbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <BSNavbar.Collapse id=\"basic-navbar-nav\">\n                <BSNav>\n                    <BSNav.Link href=\"/heatmap\">Heatmap</BSNav.Link>\n                </BSNav>\n                <BSNav>\n                    <BSNav.Link href=\"/stats\">Stats</BSNav.Link>\n                </BSNav>\n            </BSNavbar.Collapse>\n        </BSNavbar>\n    );\n};\n\nexport default Navbar;\n","const About = () => {\n    return (\n        <div>This is the homepage</div>\n    );\n};\n\nexport default About;\n","import React from 'react';\nimport { useMap } from 'react-leaflet'\nimport L from 'leaflet'\nimport 'leaflet.heat'\n\nconst HeatmapLayer = () => {\n    const map = useMap();\n\n    React.useEffect(() => {\n        fetch('https://omf1aavgfc.execute-api.eu-west-2.amazonaws.com/prod/v1/heatmap-data')\n            .then(res => res.json())\n            .then(rawData => rawData.heatmap_data_points)\n            .then(rawDataPoints => {\n\n                let sortedDataPoints = rawDataPoints\n                    .map(point => [point.lat, point.lon, point.count])\n                    .sort(function(a, b){ return a[2]-b[2] });\n\n                let flattenedCount = 1\n                let lastCount = sortedDataPoints[0][2]\n                for (let i = 0; i < sortedDataPoints.length; i++) {\n                    if (sortedDataPoints[i][2] > lastCount) {\n                        flattenedCount++\n                    }\n                    lastCount = sortedDataPoints[i][2]\n                    sortedDataPoints[i][2] = flattenedCount\n                }\n\n                const maxCount = sortedDataPoints[sortedDataPoints.length-1][2]\n                const normalisedDataPoints = sortedDataPoints\n                    .map(point => [point[0], point[1], point[2]/maxCount]);\n\n                const heatmapConfig = {\n                    minOpacity: 0.4,\n                    maxZoom: 3,\n                    radius: 20,\n                    blur: 15,\n                    gradient: {\n                        0.4: 'blue',\n                        0.6: 'lime',\n                        0.8: 'yellow',\n                        0.9: 'orange',\n                        1.0: 'red',\n                    },\n                };\n                \n                L.heatLayer(normalisedDataPoints, heatmapConfig).addTo(map);\n            })\n            .catch(console.log);\n    }, [map]);\n\n    return null\n}\n\nexport default HeatmapLayer\n","import { MapContainer, TileLayer } from 'react-leaflet'\nimport HeatmapLayer from './heatmap-layer'\n\nimport './heatmap.css';\n\nconst Heatmap = () => {\n    return (\n        <MapContainer className=\"heatmap\" center={[0, 0]} zoom={2}>\n            <HeatmapLayer />\n            <TileLayer\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n        </MapContainer>\n    );\n};\n\nexport default Heatmap;\n","export default __webpack_public_path__ + \"static/media/gold.7b323ec2.jpg\";","export default __webpack_public_path__ + \"static/media/silver.9a7c5b0e.jpg\";","export default __webpack_public_path__ + \"static/media/bronze.d1bf6559.jpg\";","import CardDeck from 'react-bootstrap/CardDeck';\nimport Card from 'react-bootstrap/Card'\n\nimport GoldMedal from '../images/gold.jpg'\nimport SilverMedal from '../images/silver.jpg' \nimport BronzeMedal from '../images/bronze.jpg'\n\nimport './podium.css'\nimport './loading.css'\n\nconst Podium = props => {\n\n    return (\n        <CardDeck className=\"podium\">\n            <Card className=\"podium-title-card\">\n                <Card.Body className=\"podium-title-text\">\n                    <Card.Text>{props.title}</Card.Text>\n                </Card.Body>\n            </Card>\n            <Card>\n                <Card.Body>\n                    <Card.Img className=\"podium-medal-image\" src={GoldMedal} />\n                    <Card.Text className={`${props.isDataLoaded ? \"\" : \"loading\"} ${\"podium-text-\" + props.type}`}>{props.data[0].value}</Card.Text>\n                </Card.Body>\n                <Card.Footer className=\"podium-gold-footer\" />\n            </Card>\n            <Card>\n                <Card.Body>\n                    <Card.Img className=\"podium-medal-image\" src={SilverMedal} />\n                    <Card.Text className={`${props.isDataLoaded ? \"\" : \"loading\"} ${\"podium-text-\" + props.type}`}>{props.data[1].value}</Card.Text>\n                </Card.Body>\n                <Card.Footer className=\"podium-silver-footer\" />\n            </Card>\n            <Card>\n                <Card.Body>\n                    <Card.Img className=\"podium-medal-image\" src={BronzeMedal} />\n                    <Card.Text className={`${props.isDataLoaded ? \"\" : \"loading\"} ${\"podium-text-\" + props.type}`}>{props.data[2].value}</Card.Text>\n                </Card.Body>\n                <Card.Footer className=\"podium-bronze-footer\" />\n            </Card>\n        </CardDeck>\n    );\n};\n\nexport default Podium;\n","import React, { useState } from 'react';\n\nimport Podium from './podium'\n\nimport './stats.css'\n\nconst Stats = () => {\n    const [isDataLoaded, setIsDataLoaded] = useState(false)\n    const [statsData, setStatsData] = useState({\n        \"most_connections\": [{},{},{}],\n        \"most_active_cities\": [{},{},{}],\n        \"most_active_countries\": [{},{},{}],\n        \"most_ip_addresses\": [{},{},{}],\n        \"most_ingress_ports\": [{},{},{}],\n    });\n\n    React.useEffect(() => {\n        fetch('https://omf1aavgfc.execute-api.eu-west-2.amazonaws.com/prod/v1/stats-data')\n            .then(res => res.json())\n            .then(data => {\n                setStatsData(data);\n                setIsDataLoaded(true);\n            })\n            .catch(console.log);\n    }, []);\n\n    return (\n        <div className=\"stats-page\">\n            <Podium title=\"Most connection attempts\" data={statsData.most_connections} type=\"number\" isDataLoaded={isDataLoaded} />\n            <Podium title=\"Most active city\" data={statsData.most_active_cities} type=\"string\" isDataLoaded={isDataLoaded} />\n            <Podium title=\"Most active country\" data={statsData.most_active_countries} type=\"string\" isDataLoaded={isDataLoaded} />\n            <Podium title=\"Most IP addresses used\" data={statsData.most_ip_addresses} type=\"number\" isDataLoaded={isDataLoaded} />\n            <Podium title=\"Most ingress ports tried\" data={statsData.most_ingress_ports} type=\"number\" isDataLoaded={isDataLoaded} />\n        </div>\n    );\n};\n\nexport default Stats\n","import { Switch, Route } from 'react-router-dom';\n\nimport About from './about'\nimport Heatmap from './heatmap'\nimport Stats from './stats'\n\nconst Main = () => {\n    return (\n        <Switch>\n            <Route exact path='/' component={About}></Route>\n            <Route exact path='/heatmap' component={Heatmap}></Route>\n            <Route exact path='/stats' component={Stats}></Route>\n        </Switch>\n    );\n};\n\nexport default Main;\n","import Navbar from './components/navbar'\nimport Main from './components/main'\n\nimport './App.css';\n\nconst App = () => {\n    return (\n        <div className=\"App\">\n            <Navbar />\n            <Main />\n        </div>\n    );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './App';\n\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render((\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>),\n    document.getElementById('root')\n);\n"],"sourceRoot":""}